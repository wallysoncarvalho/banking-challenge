version: "3.8"

services:
  zookeeper:
    image: zookeeper:3.8.0
    container_name: zookeeper_bc
    volumes:
      - zookeeper:/data
      - zookeeperlog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    healthcheck:
      test: [ "CMD", "bin/zkCli.sh", "-server", "zookeeper" ]
      interval: 2s
      timeout: 3s
      retries: 30

  kafka:
    image: debezium/kafka:1.8.1.Final
    container_name: kafka_bc
    ports:
      - "29091:29091"
    volumes:
      - kafka:/kafka/data
    environment:
      BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29091
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "bash", "-c", "unset", "JMX_PORT", ":", "kafka-topics.sh", "--zookeeper", "zookeeper:2181", "--list" ]
      interval: 2s
      timeout: 3s
      retries: 30

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui_bc
    ports:
      - "28080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
    depends_on:
      - kafka

  kafka-connect:
    image: debezium/connect:1.8.1.Final
    container_name: kafka-connect_bc
    ports:
      - "28083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: config_storage
      OFFSET_STORAGE_TOPIC: offset_storage
      STATUS_STORAGE_TOPIC: status_storage
    depends_on:
      - kafka

  postgres:
    image: debezium/postgres:14-alpine
    container_name: postgres_bc
    environment:
      - POSTGRES_USER=banking_challenge
      - POSTGRES_PASSWORD=banking_challenge
      - POSTGRES_DB=banking_challenge
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U banking_challenge -d banking_challenge" ]
      interval: 2s
      timeout: 3s
      retries: 30
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  zookeeper: { }
  zookeeperlog: { }
  kafka: { }
  postgres: { }

networks:
  bc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.2.0/24
